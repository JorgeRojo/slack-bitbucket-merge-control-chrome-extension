name: 'Publish Extension Assets'
description: 'Creates a Git tag, builds the extension, and creates a release package.'
inputs:
  input_version:
    description: 'The full version string (e.g., v1.0.0)'
    required: true
  version:
    description: 'The version number (e.g., 1.0.0)'
    required: true
  github_token:
    description: 'GitHub token for authentication'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Create tag
      run: |
        # Configure git authentication
        git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git

        # Create version tag 
        echo "TAG: ${{ inputs.input_version }} - Version ${{ inputs.version }}"

        # Check if tag already exists locally
        if git tag -l | grep -q "^${{ inputs.input_version }}$"; then
          echo "Tag ${{ inputs.input_version }} already exists locally, deleting it first"
          git tag -d ${{ inputs.input_version }}
        fi

        # Check if tag exists on remote
        if git ls-remote --tags origin | grep -q "refs/tags/${{ inputs.input_version }}$"; then
          echo "Tag ${{ inputs.input_version }} already exists on remote, deleting it first"
          git push origin --delete ${{ inputs.input_version }} || echo "Failed to delete remote tag, continuing..."
        fi

        # Create new tag
        git tag -a ${{ inputs.input_version }} -m "Version ${{ inputs.version }}"
        git push origin ${{ inputs.input_version }} --no-verify
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - name: Build extension
      run: npm run build
      shell: bash

    - name: Create release package
      run: |
        # Create ZIP package for Chrome Web Store
        mkdir -p release-package
        cp -r dist/* release-package/
        cd release-package
        zip -r ../slack-bitbucket-merge-control-chrome-extension-${{ inputs.version }}.zip .
      shell: bash
