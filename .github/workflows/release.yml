name: Build and Release Extension

on:
  # Only allow manual triggering
  workflow_dispatch:

# Define permissions needed for the workflow
permissions:
  contents: write # Needed for creating releases

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Determine version and validate release
        id: determine-version
        run: |
          # Get version from package.json
          VERSION=$(node -p "require('./package.json').version")
          TAG="v$VERSION"

          echo "Found version in package.json: $VERSION"
          echo "Corresponding tag: $TAG"

          # Check if the tag exists
          if ! git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "::error::Tag $TAG does not exist. Please run 'Close Version' workflow first to create the version tag."
            exit 1
          fi

          echo "Tag $TAG exists, proceeding with validation"

          # Check if a release already exists for this version
          RELEASE_CHECK=$(curl -s -H "Authorization: token ${{ github.token }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG")

          RELEASE_EXISTS=$(echo "$RELEASE_CHECK" | jq -r '.tag_name // empty')

          if [ "$RELEASE_EXISTS" = "$TAG" ]; then
            echo "::error::A release already exists for version $VERSION (tag $TAG)"
            echo "Release URL: $(echo "$RELEASE_CHECK" | jq -r '.html_url')"
            exit 1
          fi

          echo "No existing release found for $TAG, proceeding with release creation"

          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Final tag: $TAG, version: $VERSION"

      - name: Checkout specific tag
        uses: actions/checkout@v3
        with:
          ref: ${{ env.TAG }}
          fetch-depth: 0

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run type-check

      - name: Run tests
        run: npm run test

      - name: Build extension
        run: npm run build

      - name: Create ZIP archive
        run: |
          cd dist
          zip -r ../slack-bitbucket-merge-control-chrome-extension-${{ env.VERSION }}.zip *
          cd ..

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          name: Release ${{ env.TAG }}
          files: ./slack-bitbucket-merge-control-chrome-extension-${{ env.VERSION }}.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
