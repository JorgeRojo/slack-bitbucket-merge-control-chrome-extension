name: Sync Bug Documentation to GitHub Issues

on:
  push:
    branches:
      - master
    paths:
      - 'documentation/bugs/[0-9]*.md'

# Define los permisos necesarios para el GITHUB_TOKEN
permissions:
  contents: write  # Para hacer push de cambios
  issues: write    # Para crear issues

jobs:
  sync-bugs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Clonar todo el historial para asegurar que changed-files funcione correctamente
      
      - name: Get commit message
        id: commit-message
        run: |
          echo "message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT
      
      - name: Skip if automated commit
        if: contains(steps.commit-message.outputs.message, '[skip-issue-creation]')
        run: |
          echo "Skipping issue creation for automated commit"
          exit 0
      
      - name: Find changed bug files
        id: find-files
        run: |
          # Find all bug files that don't have a GitHub issue link
          files=$(find documentation/bugs -type f -name "[0-9]*.md" -exec grep -L "GitHub Issue #" {} \;)
          if [ -n "$files" ]; then
            echo "files=$files" >> $GITHUB_OUTPUT
            echo "Found files without GitHub issue links: $files"
          else
            echo "No files found without GitHub issue links"
          fi
      
      - name: Process new bug files
        if: steps.find-files.outputs.files != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Define the full path to the script
            const scriptPath = path.join(process.env.GITHUB_WORKSPACE, '.github', 'scripts', 'sync-bug-to-issue.js');
            console.log(`Loading script from: ${scriptPath}`);
            
            // Import the external script using dynamic import with absolute path
            const syncBugToIssueModule = await import(`file://${scriptPath}`);
            const syncBugToIssue = syncBugToIssueModule.default;
            
            // Process each bug file without a GitHub issue link
            const files = '${{ steps.find-files.outputs.files }}'.split(' ');
            const results = [];
            
            for (const file of files) {
              if (!file || file.trim() === '') continue;
              
              console.log(`Processing file: ${file}`);
              
              // Execute the script with all required parameters
              const result = await syncBugToIssue({ 
                github, 
                context, 
                core, 
                exec, 
                fs, 
                path,
                file 
              });
              
              if (result) {
                results.push(result);
              }
            }
            
            return results;
