name: Sync Bug Files to GitHub Issues

on:
  push:
    branches:
      - master
    paths:
      - 'documentation/bugs/[0-9]*.md'

jobs:
  sync-bugs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # To get the previous commit for comparison
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: documentation/bugs/[0-9]*.md
      
      - name: Process new bug files
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Process each changed bug file
            const changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}'.split(' ');
            for (const file of changedFiles) {
              // Only process new bug files
              if (!file.match(/documentation\/bugs\/\d{3}-.+\.md$/)) continue;
              
              console.log(`Processing bug file: ${file}`);
              
              // Read the bug file content
              const content = fs.readFileSync(file, 'utf8');
              
              // Check if this bug already has a GitHub issue linked
              if (content.includes('GitHub Issue #')) {
                console.log(`Bug in ${file} already has a GitHub issue linked. Skipping.`);
                continue;
              }
              
              // Extract bug details using regex
              const titleMatch = content.match(/# Bug (\d+): (.+)/);
              if (!titleMatch) continue;
              
              const bugId = titleMatch[1];
              const title = titleMatch[2];
              
              const componentMatch = content.match(/## Component\s+`(.+)`/);
              const component = componentMatch ? componentMatch[1] : 'Unknown';
              
              const severityMatch = content.match(/## Severity\s+(.+)/);
              const severity = severityMatch ? severityMatch[1] : 'Medium';
              
              // Create issue body
              const body = `This issue was automatically created from a bug report in the project's documentation.

[View full bug report](https://github.com/${context.repo.owner}/${context.repo.repo}/blob/master/${file})

${content}`;
              
              // Create the GitHub issue
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Bug #${bugId}: ${title}`,
                body: body,
                labels: ['bug', `severity:${severity.toLowerCase()}`]
              });
              
              console.log(`Created issue #${issue.data.number} for bug #${bugId}`);
              
              // Update the bug file to include the issue link
              const updatedContent = content.replace(
                `# Bug ${bugId}: ${title}`,
                `# Bug ${bugId}: ${title}\n\n[GitHub Issue #${issue.data.number}](https://github.com/${context.repo.owner}/${context.repo.repo}/issues/${issue.data.number})`
              );
              
              fs.writeFileSync(file, updatedContent);
              
              // Commit the updated bug file
              await exec.exec('git', ['config', 'user.name', 'GitHub Action']);
              await exec.exec('git', ['config', 'user.email', 'action@github.com']);
              await exec.exec('git', ['add', file]);
              await exec.exec('git', ['commit', '-m', `Link bug #${bugId} to GitHub issue #${issue.data.number}`]);
              await exec.exec('git', ['push']);
            }
